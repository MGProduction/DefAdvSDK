local audio = require "adv/lua/audio"
local config = require "adv/lua/config"
local appname=sys.get_config("project.title")

loaded_scene=""
next_scene=""

-- Win Helpers

local screennumber=1
-- https://github.com/britzl/defold-screenshot/archive/master.zip
function screenshot_get(self)
	if  screenshot~= nil then
		local png, w, h = screenshot.png()
		local name="screenshot"..screennumber..".png"
		local f = io.open(name, "wb")
		f:write(png)
		f:flush()
		f:close()
		screennumber=screennumber+1
	end
end

function window_resize(self,ww,hh)
	if  defos~= nil then
		x, y, w, h = defos.get_view_size()
		defos.set_view_size(64, 64, ww, hh)
	end
end

-- Win Helpers

function touchinside(url,action,dadurl)
	local go_scale = go.get_scale_vector(url)
	local sprite_scale = go.get(url, "scale")
	local size = go.get(url, "size")
	local pos = go.get_position(url)	
	local sprite_offset = vmath.vector3()
	local world_scale_x = RESOLUTION_X/screen_width
	local world_scale_y = RESOLUTION_Y/screen_height
	if dadurl == nil then
	else
		local posd = go.get_position(dadurl)				
		sprite_offset.x = posd.x
		sprite_offset.y = posd.y		
	end	
	pos.x = pos.x + sprite_offset.x * go_scale.x
	pos.y = pos.y + sprite_offset.y * go_scale.y

	local scaled_size = vmath.vector3(size.x * go_scale.x * sprite_scale.x, size.y * go_scale.y * sprite_scale.y, 0)

	local tx=action.x*world_scale_x
	local ty=action.y*world_scale_y

	-- print("mouse(x,y)=",tx,ty," area(x,y)=",pos.x,pos.y)

	if tx >= pos.x - scaled_size.x / 2 and tx <= pos.x + scaled_size.x / 2 and ty >= pos.y - scaled_size.y / 2 and ty <= pos.y + scaled_size.y / 2 then
		return true
	else	
		return false
	end
end

function roundinc(value,minv,maxv)
	value=value+1
	if value>maxv then
		value=minv
	end
	return value
end

function config_updatelabels_score(self)

end

function config_updatelabels(self)

end

function config_toggle(self,message,here)

end

-- 

function init(self)

	local systemname=sys.get_sys_info().system_name 
	isReleaseVersion=false
	
	msg.post(".", "acquire_input_focus")

	loaded_scene="loader#ingame"

	config.load(self)
	config.sound=1
	config.music=1

	if systemname=="Windows" then
		defos.disable_maximize_button()
		defos.disable_window_resize()
	end
	
	msg.post(loaded_scene, "load")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == hash("unload_scene") then
		msg.post(loaded_scene, "disable")
		msg.post(loaded_scene, "final")
		msg.post(loaded_scene, "unload")
    elseif message_id == hash("proxy_unloaded") then
		loaded_scene=next_scene
		msg.post(loaded_scene, "load")
	end				
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
